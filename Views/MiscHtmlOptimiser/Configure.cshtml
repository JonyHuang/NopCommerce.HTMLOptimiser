@{
    Layout = "";

    var gridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSize;
}
@model Nop.Plugin.Misc.HtmlOptimiser.Models.ConfigurationModel
@using Nop.Core.Infrastructure;
@using Nop.Web.Framework;
@using Nop.Web.Framework.Mvc;

@using (Html.BeginForm())
{
    <table class="adminContent">
        <tbody>
            <tr>
                <td colspan="2">
                    <p>
                        @T(Nop.Plugin.Misc.HtmlOptimiser.Code.Constants.ResourceIntroPart1)
                        <ul>
                            <li>
                                @T(Nop.Plugin.Misc.HtmlOptimiser.Code.Constants.ResourceIntroPart2)        
                            </li>
                            <li>
                                @T(Nop.Plugin.Misc.HtmlOptimiser.Code.Constants.ResourceIntroPart3)
                            </li>
                            <li>
                                @T(Nop.Plugin.Misc.HtmlOptimiser.Code.Constants.ResourceIntroPart4)
                            </li>
                        </ul>
                        @T(Nop.Plugin.Misc.HtmlOptimiser.Code.Constants.ResourceIntroPart5)
                    </p>
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.NopLabelFor(m => m.MinificationEnabled)
                </td>
                <td class="adminData">
                    @Html.EditorFor(m => m.MinificationEnabled)
                    @Html.ValidationMessageFor(m => m.MinificationEnabled)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.NopLabelFor(m => m.RemoveHeaders)
                </td>
                <td class="adminData">
                    <div id="@Html.IdFor(m => m.RemoveHeaders)"></div>

                    <script type="text/javascript">
                        $(document).ready(function () {
                            $("#@Html.IdFor(m => m.RemoveHeaders)").kendoGrid({
                                dataSource: {
                                    type: "json",
                                    transport: {
                                        read: {
                                            url: "@Html.Raw(Url.Action("RemoveHeaders", "MiscHtmlOptimiser", new RouteValueDictionary() { { "Namespaces", "Nop.Plugin.Misc.HtmlOptimiser.Controllers" }, { "area", "" } }))",
                                            type: "POST",
                                            dataType: "json"
                                        },
                                        create: {
                                            url:"@Html.Raw(Url.Action("InsertRemoveHeaders", "MiscHtmlOptimiser", new RouteValueDictionary() { { "Namespaces", "Nop.Plugin.Misc.HtmlOptimiser.Controllers" }, { "area", "" } }))",
                                            type: "POST",
                                            dataType: "json"
                                        },
                                        update: {
                                            url:"@Html.Raw(Url.Action("UpdateRemoveHeaders", "MiscHtmlOptimiser", new RouteValueDictionary() { { "Namespaces", "Nop.Plugin.Misc.HtmlOptimiser.Controllers" }, { "area", "" } }))",
                                            type: "POST",
                                            dataType: "json"
                                        },
                                        destroy: {
                                            url: "@Html.Raw(Url.Action("DeleteRemoveHeaders", "MiscHtmlOptimiser", new RouteValueDictionary() { { "Namespaces", "Nop.Plugin.Misc.HtmlOptimiser.Controllers" }, { "area", "" } }))",
                                            type: "POST",
                                            dataType: "json"
                                        }
                                    },
                                    schema: {
                                        data: "Data",
                                        total: "Total",
                                        errors: "Errors",
                                        model: {
                                                id: "Index",
                                                fields: {
                                                    Name: { editable: true, type: "string" },                                                
                                                    Index: { editable: false, type: "number" }
                                                }
                                        }
                                    },
                                    requestEnd: function (e) {
                                        if (e.type == "create" || e.type == "update") {
                                            this.read();
                                        }
                                    },
                                    error: function (e) {
                                        display_kendoui_grid_error(e);
                                        // Cancel the changes
                                        this.cancelChanges();
                                    },
                                    pageSize: @(gridPageSize),
                                    serverPaging: true,
                                    serverFiltering: true,
                                    serverSorting: true
                                },
                                pageable: {
                                    refresh: true
                                },
                                editable: {
                                    confirmation: false,
                                    mode: "inline"
                                },
                                scrollable: false,
                                toolbar: ["create"],
                                columns: [{
                                        field: "Name",
                                        title: "Name",
                                        width: 300
                                    }, {
                                        command: [{
                                            name: "edit",
                                            text: "@T("Admin.Common.Edit")"
                                        }, {
                                            name: "destroy",
                                            text: "@T("Admin.Common.Delete")"
                                        }],
                                        width: 200
                                    }]
                            }); 
                        });
                    </script>                        
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.NopLabelFor(m => m.AddHeaders)
                </td>
                <td class="adminData">
                    <div id="@Html.IdFor(m => m.AddHeaders)"></div>

                    <script type="text/javascript">
                        $(document).ready(function () {
                            $("#@Html.IdFor(m => m.AddHeaders)").kendoGrid({
                                dataSource: {
                                    type: "json",
                                    transport: {
                                        read: {
                                            url: "@Html.Raw(Url.Action("AddHeaders", "MiscHtmlOptimiser", new RouteValueDictionary() { { "Namespaces", "Nop.Plugin.Misc.HtmlOptimiser.Controllers" }, { "area", "" } }))",
                                            type: "POST",
                                            dataType: "json"
                                        },
                                        create: {
                                            url:"@Html.Raw(Url.Action("InsertAddHeaders", "MiscHtmlOptimiser", new RouteValueDictionary() { { "Namespaces", "Nop.Plugin.Misc.HtmlOptimiser.Controllers" }, { "area", "" } }))",
                                            type: "POST",
                                            dataType: "json"
                                        },
                                        update: {
                                            url:"@Html.Raw(Url.Action("UpdateAddHeaders", "MiscHtmlOptimiser", new RouteValueDictionary() { { "Namespaces", "Nop.Plugin.Misc.HtmlOptimiser.Controllers" }, { "area", "" } }))",
                                            type: "POST",
                                            dataType: "json"
                                        },
                                        destroy: {
                                            url: "@Html.Raw(Url.Action("DeleteAddHeaders", "MiscHtmlOptimiser", new RouteValueDictionary() { { "Namespaces", "Nop.Plugin.Misc.HtmlOptimiser.Controllers" }, { "area", "" } }))",
                                            type: "POST",
                                            dataType: "json"
                                        }
                                    },
                                    schema: {
                                        data: "Data",
                                        total: "Total",
                                        errors: "Errors",
                                        model: {
                                                id: "Index",
                                                fields: {
                                                    Name: { editable: true, type: "string" },
                                                    Value: { editable: true, type: "string" },
                                                    Index: { editable: false, type: "number" }
                                                }
                                        }
                                    },
                                    requestEnd: function (e) {
                                        if (e.type == "create" || e.type == "update" || e.type == "destroy") {
                                            this.read();
                                        }
                                    },
                                    error: function (e) {
                                        display_kendoui_grid_error(e);
                                        // Cancel the changes
                                        this.cancelChanges();
                                    },
                                    pageSize: @(gridPageSize),
                                    serverPaging: true,
                                    serverFiltering: true,
                                    serverSorting: true
                                },
                                pageable: {
                                    refresh: true
                                },
                                editable: {
                                    confirmation: false,
                                    mode: "inline"
                                },
                                scrollable: false,
                                toolbar: ["create"],
                                columns: [{
                                        field: "Name",
                                        title: "Name",
                                        width: 300
                                    }, {
                                        field: "Value",
                                        title: "Value",
                                        width: 300
                                    }, {
                                        command: [{
                                            name: "edit",
                                            text: "@T("Admin.Common.Edit")"
                                        }, {
                                            name: "destroy",
                                            text: "@T("Admin.Common.Delete")"
                                        }],
                                        width: 200
                                    }]
                            });
                        });
                    </script>
                </td>
            </tr>
            <tr>
                <td colspan="2">
                    <input type="submit" name="save" class="t-button" value="@T("Admin.Common.Save")" />
                </td>
            </tr>
        </tbody>
    </table>
}